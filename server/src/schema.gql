# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Category {
  createdAt: DateTime!
  generalCategory: Category
  generalCategoryId: String
  id: ID!
  products: [Product!]
  subcategories: [Category!]
  title: String!
  updatedAt: DateTime!
}

input CategoryPartInput {
  categoryId: String!
}

type Country {
  id: ID!
  title: String!
}

input CreateCategoryInput {
  general: CategoryPartInput
  title: String!
}

input CreateCountryInput {
  title: String!
}

input CreateOrderInput {
  productsInfo: [OrderPartInput!]!
}

input CreatePostInput {
  content: Upload
  text: String!
  title: String!
}

input CreateProductInput {
  categories: [CategoryPartInput!]!
  description: String!
  price: Float!
  title: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  createCategory(data: CreateCategoryInput!): Boolean!
  createCountry(data: CreateCountryInput!): Boolean!
  createOrder(data: CreateOrderInput!): Order!
  createPost(data: CreatePostInput!): Post!
  createProduct(data: CreateProductInput!): Boolean!
  getNewTokens: Boolean!
  login(data: LoginInput!): Boolean!
  logout: Boolean!
  register(data: RegisterInput!): Boolean!
  removeCategory(id: String!): Boolean!
  removeCountry(id: String!): Boolean!
  removeOrder(id: String!): Boolean!
  removeProduct(id: String!): Product!
  updateCategory(data: UpdateCategoryInput!): Boolean!
  updateCountry(data: UpdateCountryInput!): Boolean!
  updateOrder(data: UpdateOrderInput!): Boolean!
  updateProduct(data: UpdateProductInput!): Product!
  verifyEmail(data: VerifyEmailInput!): Boolean!
}

type Order {
  createdAt: DateTime!
  customer: User!
  id: ID!
  products: [ProductOrder!]!
  status: String!
  updatedAt: DateTime!
}

input OrderPartInput {
  amount: Int!
  productId: String!
}

type Post {
  author: User!
  contentUrl: String!
  id: ID!
  likedBy: [User!]
  registeredAt: DateTime!
  text: String!
  title: String!
  updatedAt: DateTime!
}

type Product {
  categories: [Category!]!
  createdAt: DateTime!
  description: String!
  id: ID!
  imagesUrl: String!
  orders: [ProductOrder!]
  owner: User!
  ownerId: String!
  price: Float!
  title: String!
  updatedAt: DateTime!
}

type ProductOrder {
  createdAt: DateTime!
  id: ID!
  order: Order!
  orderId: String!
  product: Product!
  productId: String!
  quantity: Int!
  updatedAt: DateTime!
}

type Query {
  categories: [Category!]!
  category(id: String!): Category!
  countries: [Country!]!
  country(id: String!): Country!
  getAll: [User!]!
  order(id: String!): Order!
  orders: [Order!]!
  product(id: String!): Product!
  products: [Product!]!
  profile: User!
  sendVerificationCode: Boolean!
}

input RegisterInput {
  countryId: String!
  email: String!
  firstName: String!
  lastName: String!
  password: String!
  username: String!
}

input UpdateCategoryInput {
  general: CategoryPartInput
  id: ID!
  title: String
}

input UpdateCountryInput {
  id: ID!
  title: String
}

input UpdateOrderInput {
  id: ID!
  productsInfo: [OrderPartInput!]!
}

input UpdateProductInput {
  categories: [CategoryPartInput!]
  description: String
  id: ID!
  price: Float
  title: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  avatarUrl: String
  country: String
  email: String!
  firstName: String!
  gender: String
  id: ID!
  isVerified: String!
  lastName: String!
  likes: [Post!]
  passwordHash: String!
  posts: [Post!]
  registeredAt: DateTime!
  role: String!
  status: String!
  updatedAt: DateTime!
  username: String!
}

type UserInfoResponse {
  email: String!
  id: String!
  role: String!
}

input VerifyEmailInput {
  verifyCode: String!
}